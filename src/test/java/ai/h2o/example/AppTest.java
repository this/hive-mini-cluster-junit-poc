/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ai.h2o.example;

import com.github.sakserv.minicluster.impl.HiveLocalMetaStore;
import com.github.sakserv.minicluster.impl.HiveLocalServer2;
import com.github.sakserv.minicluster.impl.ZookeeperLocalCluster;
import org.apache.hadoop.hive.conf.HiveConf;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class AppTest {
    private static ZookeeperLocalCluster zookeeperLocalCluster;
    private static HiveLocalMetaStore hiveLocalMetaStore;
    private static HiveLocalServer2 hiveLocalServer2;

    @BeforeClass
    public static void setUp() throws Exception {
        zookeeperLocalCluster = new ZookeeperLocalCluster.Builder()
                .setPort(22010)
                .setTempDir("/tmp/zk-mini-cluster")
                .setZookeeperConnectionString("127.0.0.1:22010")
                .build();
        zookeeperLocalCluster.start();

        hiveLocalMetaStore = new HiveLocalMetaStore.Builder()
                .setHiveMetastoreHostname("localhost")
                .setHiveMetastorePort(9083)
                .setHiveMetastoreDerbyDbDir("/tmp/hive-mini-cluster/metastore_db")
                .setHiveScratchDir("/tmp/hive-mini-cluster/hdfs-scratchdir")
                .setHiveWarehouseDir("/tmp/hive-mini-cluster/warehouse")
                .setHiveConf(new HiveConf())
                .build();
        hiveLocalMetaStore.start();

        hiveLocalServer2 = new HiveLocalServer2.Builder()
                .setHiveServer2Hostname("localhost")
                .setHiveServer2Port(10000)
                .setHiveMetastoreHostname("localhost")
                .setHiveMetastorePort(9083)
                .setHiveMetastoreDerbyDbDir("/tmp/hive-mini-cluster/metastore_db")
                .setHiveScratchDir("/tmp/hive-mini-cluster/hdfs-scratchdir")
                .setHiveWarehouseDir("/tmp/hive-mini-cluster/warehouse")
                .setZookeeperConnectionString("127.0.0.1:22010")
                .setHiveConf(new HiveConf())
                .build();
        hiveLocalServer2.start();
    }

    @AfterClass
    public static void tearDown() throws Exception {
        hiveLocalServer2.stop();
        hiveLocalMetaStore.stop();
        zookeeperLocalCluster.stop();
    }

    @Test
    public void testHiveConnector() {
        App app = new App();
        assertEquals("{\"success\":true}", app.runConnector("NOAUTH"));
    }
}
